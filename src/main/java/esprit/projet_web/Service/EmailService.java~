package esprit.projet_web.Service;

import esprit.projet_web.Entity.Reservation;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;
import org.thymeleaf.TemplateEngine;

import org.thymeleaf.context.Context;

@Service
public class EmailService {

    private final JavaMailSender mailSender;

    public EmailService(JavaMailSender mailSender) {
        this.mailSender = mailSender;
    }

    public void sendAdminNotification(String to, String subject, String text) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(to);
        message.setSubject(subject);
        message.setText(text);
        mailSender.send(message);
    }
    @Autowired
    private TemplateEngine templateEngine;

    public void sendHtmlAdminNotification(String to, String subject, Reservation reservation) throws MessagingException {
        Context context = new Context();
        context.setVariable("reservationId", reservation.getId());
        context.setVariable("clientName",
                reservation.getClient().getPrenom() + " " + reservation.getClient().getNom());
        context.setVariable("clientEmail", reservation.getClient().getEmail());
        context.setVariable("eventName", reservation.getEvenement().getNom());
        context.setVariable("places", reservation.getNbrPlace());
        context.setVariable("reservationDate", reservation.getDateReservation());

        String htmlContent = templateEngine.process("email-reservation", context);

        MimeMessage message = mailSender.createMimeMessage();
        MimeMessageHelper helper = new MimeMessageHelper(message, true);

        try {
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true);
            mailSender.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException("Erreur lors de l'envoi de l'email", e);
        }
    }
}