{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport let AdminComponent = class AdminComponent {\n  constructor(postService) {\n    this.postService = postService;\n    this.posts = [];\n    this.defaultImage = 'https://via.placeholder.com/300x200?text=No+Image';\n  }\n  ngOnInit() {\n    this.loadPosts();\n  }\n  loadPosts() {\n    this.postService.getPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n  }\n  deletePost(id) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cet article ?')) {\n      this.postService.deletePost(id).subscribe({\n        next: () => {\n          this.loadPosts(); // Recharge les articles après suppression\n        },\n\n        error: err => {\n          console.error('Erreur lors de la suppression :', err);\n        }\n      });\n    }\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <div class=\"admin-container\">\n      <h1>Administration des articles</h1>\n      <div class=\"posts-list\">\n        <h2>Articles existants</h2>\n        <div class=\"posts-grid\">\n          @for (post of posts; track post.id) {\n            <div class=\"post-card\">\n              <div class=\"post-image\" [style.backgroundImage]=\"'url(' + (post.imageUrl || defaultImage) + ')'\"></div>\n              <div class=\"post-info\">\n                <span class=\"category\">{{ post.category || 'Sans catégorie' }}</span>\n                <h3>{{ post.title || 'Titre indisponible' }}</h3>\n                <p class=\"content\">{{ post.content | slice:0:100 }}...</p>\n                <p class=\"meta\">Par {{ post.author || 'Anonyme' }} le {{ post.createdAt | date:'mediumDate' }}</p>\n                <div class=\"actions\">\n                  <a [routerLink]=\"['/edit-post', post.id]\" class=\"edit-btn\">\n                    <i class=\"fas fa-edit\"></i> Modifier\n                  </a>\n                  <button class=\"delete-btn\" (click)=\"deletePost(post.id)\">\n                    <i class=\"fas fa-trash\"></i> Supprimer\n                  </button>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [/* tes styles inchangés, déjà propres et modernes */]\n})], AdminComponent);","map":{"version":3,"names":["Component","CommonModule","RouterModule","AdminComponent","constructor","postService","posts","defaultImage","ngOnInit","loadPosts","getPosts","subscribe","deletePost","id","confirm","next","error","err","console","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\ghada\\Desktop\\4eme_TWIN\\projet_Microservice\\frontend\\src\\app\\components\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../models/post.model';\n\n@Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <div class=\"admin-container\">\n      <h1>Administration des articles</h1>\n      <div class=\"posts-list\">\n        <h2>Articles existants</h2>\n        <div class=\"posts-grid\">\n          @for (post of posts; track post.id) {\n            <div class=\"post-card\">\n              <div class=\"post-image\" [style.backgroundImage]=\"'url(' + (post.imageUrl || defaultImage) + ')'\"></div>\n              <div class=\"post-info\">\n                <span class=\"category\">{{ post.category || 'Sans catégorie' }}</span>\n                <h3>{{ post.title || 'Titre indisponible' }}</h3>\n                <p class=\"content\">{{ post.content | slice:0:100 }}...</p>\n                <p class=\"meta\">Par {{ post.author || 'Anonyme' }} le {{ post.createdAt | date:'mediumDate' }}</p>\n                <div class=\"actions\">\n                  <a [routerLink]=\"['/edit-post', post.id]\" class=\"edit-btn\">\n                    <i class=\"fas fa-edit\"></i> Modifier\n                  </a>\n                  <button class=\"delete-btn\" (click)=\"deletePost(post.id)\">\n                    <i class=\"fas fa-trash\"></i> Supprimer\n                  </button>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [/* tes styles inchangés, déjà propres et modernes */]\n})\nexport class AdminComponent implements OnInit {\n  posts: Post[] = [];\n  readonly defaultImage = 'https://via.placeholder.com/300x200?text=No+Image';\n\n  constructor(private postService: PostService) {}\n\n  ngOnInit() {\n    this.loadPosts();\n  }\n\n  loadPosts(): void {\n    this.postService.getPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n  }\n\n  deletePost(id: number): void {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cet article ?')) {\n      this.postService.deletePost(id).subscribe({\n        next: () => {\n          this.loadPosts(); // Recharge les articles après suppression\n        },\n        error: (err) => {\n          console.error('Erreur lors de la suppression :', err);\n        }\n      });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAuCvC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,KAAK,GAAW,EAAE;IACT,KAAAC,YAAY,GAAG,mDAAmD;EAE5B;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAACC,SAAS,CAACL,KAAK,IAAG;MAC5C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAM,UAAUA,CAACC,EAAU;IACnB,IAAIC,OAAO,CAAC,kDAAkD,CAAC,EAAE;MAC/D,IAAI,CAACT,WAAW,CAACO,UAAU,CAACC,EAAE,CAAC,CAACF,SAAS,CAAC;QACxCI,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACN,SAAS,EAAE,CAAC,CAAC;QACpB,CAAC;;QACDO,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAEC,GAAG,CAAC;QACvD;OACD,CAAC;;EAEN;CACD;AA5BYd,cAAc,GAAAgB,UAAA,EAnC1BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACrB,YAAY,EAAEC,YAAY,CAAC;EACrCqB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BT;EACDC,MAAM,EAAE,CAAC;CACV,CAAC,C,EACWrB,cAAc,CA4B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}