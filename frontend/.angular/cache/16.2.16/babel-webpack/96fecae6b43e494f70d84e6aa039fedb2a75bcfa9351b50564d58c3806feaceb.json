{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { tap } from 'rxjs';\nexport let AdminComponent = class AdminComponent {\n  constructor(postService) {\n    this.postService = postService;\n    this.defaultImage = 'https://via.placeholder.com/300x200?text=No+Image';\n  }\n  ngOnInit() {\n    this.loadPosts();\n  }\n  getImageUrl(imageUrl) {\n    return `url(${imageUrl || this.defaultImage})`;\n  }\n  deletePost(id) {\n    if (confirm('√ätes-vous s√ªr de vouloir supprimer cet article ?')) {\n      this.postService.deletePost(id).pipe(tap(() => this.loadPosts())).subscribe();\n    }\n  }\n  loadPosts() {\n    this.posts$ = this.postService.getPosts();\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <div class=\"admin-container\">\n      <h1>üõ†Ô∏è Gestion des Articles</h1>\n\n      <section class=\"posts-list\">\n        <h2>üìÑ Liste des Articles</h2>\n\n        @if (posts$ | async; as posts) {\n          <div class=\"posts-grid\">\n            @for (post of posts; track post.id) {\n              <article class=\"post-card\" [attr.aria-label]=\"post.title\">\n                <div class=\"post-image\" [style.backgroundImage]=\"getImageUrl(post.imageUrl)\"></div>\n                <div class=\"post-info\">\n                  <span class=\"category\">{{ post.category || 'Sans cat√©gorie' }}</span>\n                  <h3>{{ post.title || 'Titre indisponible' }}</h3>\n                  <p class=\"content\">{{ (post.content | slice:0:100) || 'Contenu indisponible' }}...</p>\n                  <p class=\"meta\">üñäÔ∏è {{ post.author || 'Anonyme' }} | üìÖ {{ post.createdAt | date:'mediumDate' }}</p>\n                  <div class=\"actions\">\n                    <a [routerLink]=\"['/edit-post', post.id]\" class=\"edit-btn\" title=\"Modifier l'article\">\n                      <i class=\"fas fa-pen\"></i> Modifier\n                    </a>\n                    <button class=\"delete-btn\" (click)=\"deletePost(post.id)\" aria-label=\"Supprimer l'article\">\n                      <i class=\"fas fa-trash-alt\"></i> Supprimer\n                    </button>\n                  </div>\n                </div>\n              </article>\n            } @empty {\n              <p class=\"no-posts\">Aucun article pour le moment.</p>\n            }\n          </div>\n        } @else {\n          <p class=\"loading\">‚è≥ Chargement en cours...</p>\n        }\n      </section>\n    </div>\n  `,\n  styles: [/* m√™me CSS que pr√©c√©demment, conserv√© ici sans re-√©num√©ration pour lisibilit√© */]\n})], AdminComponent);","map":{"version":3,"names":["Component","CommonModule","RouterModule","tap","AdminComponent","constructor","postService","defaultImage","ngOnInit","loadPosts","getImageUrl","imageUrl","deletePost","id","confirm","pipe","subscribe","posts$","getPosts","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\ghada\\Desktop\\4eme_TWIN\\projet_Microservice\\frontend\\src\\app\\components\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../models/post.model';\nimport { Observable, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <div class=\"admin-container\">\n      <h1>üõ†Ô∏è Gestion des Articles</h1>\n\n      <section class=\"posts-list\">\n        <h2>üìÑ Liste des Articles</h2>\n\n        @if (posts$ | async; as posts) {\n          <div class=\"posts-grid\">\n            @for (post of posts; track post.id) {\n              <article class=\"post-card\" [attr.aria-label]=\"post.title\">\n                <div class=\"post-image\" [style.backgroundImage]=\"getImageUrl(post.imageUrl)\"></div>\n                <div class=\"post-info\">\n                  <span class=\"category\">{{ post.category || 'Sans cat√©gorie' }}</span>\n                  <h3>{{ post.title || 'Titre indisponible' }}</h3>\n                  <p class=\"content\">{{ (post.content | slice:0:100) || 'Contenu indisponible' }}...</p>\n                  <p class=\"meta\">üñäÔ∏è {{ post.author || 'Anonyme' }} | üìÖ {{ post.createdAt | date:'mediumDate' }}</p>\n                  <div class=\"actions\">\n                    <a [routerLink]=\"['/edit-post', post.id]\" class=\"edit-btn\" title=\"Modifier l'article\">\n                      <i class=\"fas fa-pen\"></i> Modifier\n                    </a>\n                    <button class=\"delete-btn\" (click)=\"deletePost(post.id)\" aria-label=\"Supprimer l'article\">\n                      <i class=\"fas fa-trash-alt\"></i> Supprimer\n                    </button>\n                  </div>\n                </div>\n              </article>\n            } @empty {\n              <p class=\"no-posts\">Aucun article pour le moment.</p>\n            }\n          </div>\n        } @else {\n          <p class=\"loading\">‚è≥ Chargement en cours...</p>\n        }\n      </section>\n    </div>\n  `,\n  styles: [/* m√™me CSS que pr√©c√©demment, conserv√© ici sans re-√©num√©ration pour lisibilit√© */]\n})\nexport class AdminComponent implements OnInit {\n  posts$: Observable<Post[]>;\n  readonly defaultImage = 'https://via.placeholder.com/300x200?text=No+Image';\n\n  constructor(private postService: PostService) {}\n\n  ngOnInit(): void {\n    this.loadPosts();\n  }\n\n  getImageUrl(imageUrl?: string): string {\n    return `url(${imageUrl || this.defaultImage})`;\n  }\n\n  deletePost(id: number): void {\n    if (confirm('√ätes-vous s√ªr de vouloir supprimer cet article ?')) {\n      this.postService.deletePost(id).pipe(\n        tap(() => this.loadPosts())\n      ).subscribe();\n    }\n  }\n\n  private loadPosts(): void {\n    this.posts$ = this.postService.getPosts();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAG9C,SAAqBC,GAAG,QAAQ,MAAM;AA6C/B,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAFtB,KAAAC,YAAY,GAAG,mDAAmD;EAE5B;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,WAAWA,CAACC,QAAiB;IAC3B,OAAO,OAAOA,QAAQ,IAAI,IAAI,CAACJ,YAAY,GAAG;EAChD;EAEAK,UAAUA,CAACC,EAAU;IACnB,IAAIC,OAAO,CAAC,kDAAkD,CAAC,EAAE;MAC/D,IAAI,CAACR,WAAW,CAACM,UAAU,CAACC,EAAE,CAAC,CAACE,IAAI,CAClCZ,GAAG,CAAC,MAAM,IAAI,CAACM,SAAS,EAAE,CAAC,CAC5B,CAACO,SAAS,EAAE;;EAEjB;EAEQP,SAASA,CAAA;IACf,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACX,WAAW,CAACY,QAAQ,EAAE;EAC3C;CACD;AAzBYd,cAAc,GAAAe,UAAA,EA3C1BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACrB,YAAY,EAAEC,YAAY,CAAC;EACrCqB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCT;EACDC,MAAM,EAAE,CAAC;CACV,CAAC,C,EACWpB,cAAc,CAyB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}