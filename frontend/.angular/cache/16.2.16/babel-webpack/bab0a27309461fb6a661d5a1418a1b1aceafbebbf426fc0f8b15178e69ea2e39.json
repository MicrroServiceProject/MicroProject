{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { trigger, transition, style, animate } from '@angular/animations';\nexport let AdminComponent = class AdminComponent {\n  constructor(postService) {\n    this.postService = postService;\n    this.posts = [];\n  }\n  ngOnInit() {\n    this.postService.getPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n  }\n  deletePost(id) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cet article ?')) {\n      this.postService.deletePost(id);\n      this.posts = this.posts.filter(post => post.id !== id);\n    }\n  }\n  getCategoryColor(category) {\n    const colors = {\n      peinture: '#D4A017',\n      sculpture: '#2C3E50',\n      photographie: '#E74C3C',\n      'art numérique': '#7f8c8d'\n    };\n    return colors[category.toLowerCase()] || '#7f8c8d';\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  animations: [trigger('cardAnimation', [transition(':enter', [style({\n    opacity: 0,\n    transform: 'translateY(20px)'\n  }), animate('300ms ease-out', style({\n    opacity: 1,\n    transform: 'translateY(0)'\n  }))])])],\n  template: `\n    <div class=\"admin-container\">\n      <h1>Administration des articles</h1>\n      <div class=\"posts-list\">\n        <h2>Articles existants</h2>\n        <div class=\"posts-grid\">\n          @for (post of posts; track post.id) {\n            <div class=\"post-card\" [@cardAnimation]>\n              <div class=\"post-image\" [style.backgroundImage]=\"'url(' + post.imageUrl + ')'\"></div>\n              <div class=\"post-info\">\n                <span class=\"category\" [style.backgroundColor]=\"getCategoryColor(post.category)\">\n                  {{ post.category }}\n                </span>\n                <h3>{{ post.title }}</h3>\n                <p class=\"content\">{{ post.content | slice:0:100 }}...</p>\n                <p class=\"meta\">Par {{ post.author }} le {{ post.createdAt | date:'mediumDate' }}</p>\n                <div class=\"actions\">\n                  <a [routerLink]=\"['/edit-post', post.id]\" class=\"edit-btn\">\n                    <i class=\"fas fa-edit\"></i> Modifier\n                  </a>\n                  <button class=\"delete-btn\" (click)=\"deletePost(post.id)\">\n                    <i class=\"fas fa-trash\"></i> Supprimer\n                  </button>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  `\n  // Rest of the styles remain the same as in your original code\n})], AdminComponent);","map":{"version":3,"names":["Component","CommonModule","RouterModule","trigger","transition","style","animate","AdminComponent","constructor","postService","posts","ngOnInit","getPosts","subscribe","deletePost","id","confirm","filter","post","getCategoryColor","category","colors","peinture","sculpture","photographie","toLowerCase","__decorate","selector","standalone","imports","animations","opacity","transform","template"],"sources":["C:\\Users\\ghada\\Desktop\\4eme_TWIN\\projet_Microservice\\frontend\\src\\app\\components\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../models/post.model';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  animations: [\n    trigger('cardAnimation', [\n      transition(':enter', [\n        style({ opacity: 0, transform: 'translateY(20px)' }),\n        animate('300ms ease-out', style({ opacity: 1, transform: 'translateY(0)' }))\n      ])\n    ])\n  ],\n  template: `\n    <div class=\"admin-container\">\n      <h1>Administration des articles</h1>\n      <div class=\"posts-list\">\n        <h2>Articles existants</h2>\n        <div class=\"posts-grid\">\n          @for (post of posts; track post.id) {\n            <div class=\"post-card\" [@cardAnimation]>\n              <div class=\"post-image\" [style.backgroundImage]=\"'url(' + post.imageUrl + ')'\"></div>\n              <div class=\"post-info\">\n                <span class=\"category\" [style.backgroundColor]=\"getCategoryColor(post.category)\">\n                  {{ post.category }}\n                </span>\n                <h3>{{ post.title }}</h3>\n                <p class=\"content\">{{ post.content | slice:0:100 }}...</p>\n                <p class=\"meta\">Par {{ post.author }} le {{ post.createdAt | date:'mediumDate' }}</p>\n                <div class=\"actions\">\n                  <a [routerLink]=\"['/edit-post', post.id]\" class=\"edit-btn\">\n                    <i class=\"fas fa-edit\"></i> Modifier\n                  </a>\n                  <button class=\"delete-btn\" (click)=\"deletePost(post.id)\">\n                    <i class=\"fas fa-trash\"></i> Supprimer\n                  </button>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  `,\n  // Rest of the styles remain the same as in your original code\n})\nexport class AdminComponent implements OnInit {\n  posts: Post[] = [];\n\n  constructor(private postService: PostService) {}\n\n  ngOnInit() {\n    this.postService.getPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n  }\n\n  deletePost(id: number) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cet article ?')) {\n      this.postService.deletePost(id);\n      this.posts = this.posts.filter(post => post.id !== id);\n    }\n  }\n\n  getCategoryColor(category: string): string {\n    const colors: { [key: string]: string } = {\n      peinture: '#D4A017',\n      sculpture: '#2C3E50',\n      photographie: '#E74C3C',\n      'art numérique': '#7f8c8d'\n    };\n    return colors[category.toLowerCase()] || '#7f8c8d';\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAG9C,SAASC,OAAO,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,QAAQ,qBAAqB;AA+ClE,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAW,EAAE;EAE6B;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE,CAACC,SAAS,CAACH,KAAK,IAAG;MAC5C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAI,UAAUA,CAACC,EAAU;IACnB,IAAIC,OAAO,CAAC,kDAAkD,CAAC,EAAE;MAC/D,IAAI,CAACP,WAAW,CAACK,UAAU,CAACC,EAAE,CAAC;MAC/B,IAAI,CAACL,KAAK,GAAG,IAAI,CAACA,KAAK,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;;EAE1D;EAEAI,gBAAgBA,CAACC,QAAgB;IAC/B,MAAMC,MAAM,GAA8B;MACxCC,QAAQ,EAAE,SAAS;MACnBC,SAAS,EAAE,SAAS;MACpBC,YAAY,EAAE,SAAS;MACvB,eAAe,EAAE;KAClB;IACD,OAAOH,MAAM,CAACD,QAAQ,CAACK,WAAW,EAAE,CAAC,IAAI,SAAS;EACpD;CACD;AA3BYlB,cAAc,GAAAmB,UAAA,EA7C1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC5B,YAAY,EAAEC,YAAY,CAAC;EACrC4B,UAAU,EAAE,CACV3B,OAAO,CAAC,eAAe,EAAE,CACvBC,UAAU,CAAC,QAAQ,EAAE,CACnBC,KAAK,CAAC;IAAE0B,OAAO,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAkB,CAAE,CAAC,EACpD1B,OAAO,CAAC,gBAAgB,EAAED,KAAK,CAAC;IAAE0B,OAAO,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAe,CAAE,CAAC,CAAC,CAC7E,CAAC,CACH,CAAC,CACH;EACDC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BV;CACD,CAAC,C,EACW1B,cAAc,CA2B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}